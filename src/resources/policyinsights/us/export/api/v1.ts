// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../../../../core/resource';
import { APIPromise } from '../../../../../core/api-promise';
import { RequestOptions } from '../../../../../internal/request-options';

export class V1 extends APIResource {
  /**
   * This endpoint returns all the agencies that publish to the Federal Register
   * currently in the Topic Lake repository
   */
  getAgency(
    query: V1GetAgencyParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetAgencyResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/agency', { query, ...options });
  }

  /**
   * Based on the Atoms(Topics) generated by our topiclakeAI, the AI generates all
   * possible classifications based on the topic. Useful in creating your own search
   * network, text annotation etc. Each Classification can be traced back to its
   * parent Federal Register Document for verification
   */
  getClassification(
    query: V1GetClassificationParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetClassificationResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/classification', { query, ...options });
  }

  /**
   * An endpoint to retrieve Federal Register documents present in the Topic Lake
   * repository with all important filters like publishing agency id or Federal
   * Register designated topics at the time of publishing
   */
  getDocuments(
    query: V1GetDocumentsParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetDocumentsResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/documents', { query, ...options });
  }

  /**
   * Based on the Atoms(Topics) generated by our TopiclakeAI, multiple named entities
   * are detected. Useful in creating your own annotated data network and search
   * optimizations. Each Entity can be traced back to its parent Federal Register
   * Document for verification
   */
  getEntity(
    query: V1GetEntityParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetEntityResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/entity', { query, ...options });
  }

  /**
   * The Federal Register sometimes publishes documents that also have annotated
   * keywords called topics, this is not to be confused with Topiclake_Topics from
   * the Topic Lake Repository. This route displays all the Federal Register
   * designated topics
   */
  getFrDesignatedTopics(options?: RequestOptions): APIPromise<V1GetFrDesignatedTopicsResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/fr_designated_topics', options);
  }

  /**
   * Based on the Atoms(Topics) generated by our TopiclakeAI, the AI generates all
   * possible keywords based on the topic. Useful in creating your own search
   * network, text annotation etc. Each Keyword can be traced back to its parent
   * Federal Register Document for verification
   */
  getKeyword(
    query: V1GetKeywordParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetKeywordResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/keyword', { query, ...options });
  }

  /**
   * Based on the Atoms(Topics) generated by our TopiclakeAI, multiple questions and
   * answers on the given context are generated. Useful in creating your own
   * knowledge base and training data. Each QnA can be traced back to its parent
   * Federal Register Document for verification
   */
  getQna(
    query: V1GetQnaParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetQnaResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/qna', { query, ...options });
  }

  /**
   * Based on the summaries generated by our TopiclakeAI, the AI provides concise
   * document briefs and key insights. Useful in creating annotated data networks,
   * summarizing information, and enhancing search optimizations. Each Insight can be
   * traced back to its parent Federal Register Document for verification.
   */
  getRegBrief(
    query: V1GetRegBriefParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetRegBriefResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/reg_brief', { query, ...options });
  }

  /**
   * Based on the Atoms(Topics) generated by our TopiclakeAI, a sentiment on the
   * given topic is generated. Useful in creating your own knowledge base and
   * training data. Each Sentiment can be traced back to its parent Federal Register
   * Document for verification
   */
  getSentiment(
    query: V1GetSentimentParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetSentimentResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/sentiment', { query, ...options });
  }

  /**
   * Based on the Atoms(Topics) generated by our TopiclakeAI, three types of
   * summaries are generated on the topic. Useful in creating your own knowledge base
   * and training data. Each Summary can be traced back to its parent Federal
   * Register Document for verification
   */
  getSummary(
    query: V1GetSummaryParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetSummaryResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/summary', { query, ...options });
  }

  /**
   * Advanced Topic Object Model, also knows as ATOM(Topiclake_Topic) in Topic Lake
   * repositories are logical and human readable chunks of any given Federal Register
   * document created by our TopiclakeAI technology. A document can contain multiple
   * Atoms(Topics) in them. The filters remain the same as in "/documents"
   */
  getTopiclakeTopics(
    query: V1GetTopiclakeTopicsParams | null | undefined = {},
    options?: RequestOptions,
  ): APIPromise<V1GetTopiclakeTopicsResponse> {
    return this._client.get('/policyinsights/us/export/api/v1/topiclake_topics', { query, ...options });
  }
}

export interface V1GetAgencyResponse {
  agencies: Array<V1GetAgencyResponse.Agency>;

  count: number | null;

  status: string | null;
}

export namespace V1GetAgencyResponse {
  export interface Agency {
    agency_id: number | null;

    agency_name: string | null;

    short_name: string | null;

    logo?: string | null;
  }
}

export interface V1GetClassificationResponse {
  classification_data: Array<V1GetClassificationResponse.ClassificationData> | null;

  count: number | null;

  current_page: number | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  total_count: number | null;

  total_pages: number | null;
}

export namespace V1GetClassificationResponse {
  export interface ClassificationData {
    id: string;

    classification: string | null;

    created_at: string;

    document_id: string | null;

    document_name: string | null;

    document_number: string | null;

    score: number | null;

    topiclake_topic_id: string;

    updated_at: string;
  }
}

export interface V1GetDocumentsResponse {
  count: number | null;

  current_page: number | null;

  document_data: Array<V1GetDocumentsResponse.DocumentData>;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  total_count: number | null;

  total_pages: number | null;

  publication_end_date?: string | null;

  publication_start_date?: string | null;
}

export namespace V1GetDocumentsResponse {
  export interface DocumentData {
    id: string;

    agencies: Array<DocumentData.Agency>;

    body_html_url: string;

    created_at: string;

    document_name: string | null;

    document_number: string;

    full_text_xml_url: string | null;

    publication_date: string;

    topics: Array<string>;

    updated_at: string;

    abstract?: string | null;

    action?: string | null;

    agency_names?: Array<string> | null;

    amendatory_instruction_count?: number | null;

    cfr_references?: string | null;

    citation?: string | null;

    comment_url?: string | null;

    comments_close_on?: string | null;

    correction_of?: string | null;

    corrections?: Array<string> | null;

    dates?: string | null;

    disposition_notes?: string | null;

    docket_id?: string | null;

    docket_ids?: string | null;

    dockets?: string | null;

    effective_on?: string | null;

    end_page?: number | null;

    excerpts?: string | null;

    executive_order_notes?: string | null;

    executive_order_number?: string | null;

    explanation?: string | null;

    html_url?: string | null;

    images?: { [key: string]: unknown } | null;

    images_metadata?: { [key: string]: unknown } | null;

    json_url?: string | null;

    mods_url?: string | null;

    not_received_for_publication?: boolean | null;

    page_length?: number | null;

    page_views?: { [key: string]: unknown } | null;

    pdf_url?: string | null;

    president?: string | null;

    presidential_document_number?: string | null;

    proclamation_number?: string | null;

    public_inspection_pdf_url?: string | null;

    raw_text_url?: string | null;

    regulation_id_number_info?: { [key: string]: unknown } | null;

    regulation_id_numbers?: Array<string> | null;

    regulations_dot_gov_info?: { [key: string]: unknown } | null;

    regulations_dot_gov_url?: string | null;

    related_documents?: Array<{ [key: string]: unknown }> | null;

    significant?: string | null;

    signing_date?: string | null;

    start_page?: number | null;

    subtype?: string | null;

    title?: string | null;

    toc_doc?: string | null;

    toc_subject?: string | null;

    type?: string | null;

    volume?: string | null;
  }

  export namespace DocumentData {
    export interface Agency {
      agency_id: number | null;

      agency_name: string | null;

      logo: string | null;

      short_name: string | null;
    }
  }
}

export interface V1GetEntityResponse {
  count: number | null;

  current_page: number | null;

  entity_data: Array<V1GetEntityResponse.EntityData> | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  total_count: number | null;

  total_pages: number | null;
}

export namespace V1GetEntityResponse {
  export interface EntityData {
    id: string;

    created_at: string;

    document_id: string | null;

    document_name: string | null;

    document_number: string | null;

    label: string | null;

    score: number | null;

    topiclake_topic_id: string;

    type: number | null;

    updated_at: string;
  }
}

export interface V1GetFrDesignatedTopicsResponse {
  count: number | null;

  fr_designated_topics: Array<string> | null;

  status: string | null;
}

export interface V1GetKeywordResponse {
  count: number | null;

  current_page: number | null;

  keyword_data: Array<V1GetKeywordResponse.KeywordData> | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  total_count: number | null;

  total_pages: number | null;
}

export namespace V1GetKeywordResponse {
  export interface KeywordData {
    id: string;

    created_at: string;

    document_id: string | null;

    document_name: string | null;

    document_number: string | null;

    key_word: string | null;

    score: number | null;

    topiclake_topic_id: string;

    updated_at: string;
  }
}

export interface V1GetQnaResponse {
  count: number | null;

  current_page: number | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  qna_data: Array<V1GetQnaResponse.QnaData>;

  status: string | null;

  total_count: number | null;

  total_pages: number | null;

  publication_end_date?: string | null;

  publication_start_date?: string | null;
}

export namespace V1GetQnaResponse {
  export interface QnaData {
    id: string;

    answer: string | null;

    created_at: string;

    document_id: string;

    document_name: string | null;

    document_number: string | null;

    question: string | null;

    topiclake_topic_id: string;

    updated_at: string;
  }
}

export interface V1GetRegBriefResponse {
  count: number | null;

  current_page: number | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  topic_lake_insight_data: Array<V1GetRegBriefResponse.TopicLakeInsightData> | null;

  total_count: number | null;

  total_pages: number | null;
}

export namespace V1GetRegBriefResponse {
  export interface TopicLakeInsightData {
    id: string;

    created_at: string;

    document_id: string | null;

    document_name: string | null;

    document_number: string | null;

    reg_brief: { [key: string]: unknown } | null;

    updated_at: string;
  }
}

export interface V1GetSentimentResponse {
  count: number | null;

  current_page: number | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  sentiment_data: Array<V1GetSentimentResponse.SentimentData> | null;

  status: string | null;

  total_count: number | null;

  total_pages: number | null;
}

export namespace V1GetSentimentResponse {
  export interface SentimentData {
    id: string;

    created_at: string;

    document_id: string;

    document_name: string | null;

    document_number: string | null;

    score: number | null;

    sentiment: string | null;

    summary: string | null;

    topiclake_topic_id: string;

    updated_at: string;
  }
}

export interface V1GetSummaryResponse {
  count: number | null;

  current_page: number | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  summary_data: Array<V1GetSummaryResponse.SummaryData> | null;

  total_count: number | null;

  total_pages: number | null;
}

export namespace V1GetSummaryResponse {
  export interface SummaryData {
    id: string;

    created_at: string;

    document_id: string | null;

    document_name: string | null;

    document_number: string | null;

    long_summary: string | null;

    short_summary: string | null;

    title: string | null;

    topiclake_topic_id: string;

    updated_at: string;
  }
}

export interface V1GetTopiclakeTopicsResponse {
  count: number | null;

  current_page: number | null;

  message: string | null;

  next_page: number | null;

  previous_page: number | null;

  status: string | null;

  topiclake_topic_data: Array<V1GetTopiclakeTopicsResponse.TopiclakeTopicData>;

  total_count: number | null;

  total_pages: number | null;

  publication_end_date?: string | null;

  publication_start_date?: string | null;
}

export namespace V1GetTopiclakeTopicsResponse {
  export interface TopiclakeTopicData {
    id: string;

    character_length: number | null;

    created_at: string;

    description: string | null;

    document_id: string;

    document_name: string | null;

    document_number: string | null;

    extra_attributes: TopiclakeTopicData.ExtraAttributes | null;

    title: string | null;

    updated_at: string;
  }

  export namespace TopiclakeTopicData {
    export interface ExtraAttributes {
      parent: Array<string>;

      sort_number: number | null;
    }
  }
}

export interface V1GetAgencyParams {
  include_partials?: boolean | null;
}

export interface V1GetClassificationParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit the document associated with given topiclake_topic_id from TopicLake™
   * Technology
   */
  topiclake_topic_id?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetDocumentsParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetEntityParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit the document associated with given topiclake_topic_id from TopicLake™
   * Technology
   */
  topiclake_topic_id?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetKeywordParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit the document associated with given topiclake_topic_id from TopicLake™
   * Technology
   */
  topiclake_topic_id?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetQnaParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit the document associated with given topiclake_topic_id from TopicLake™
   * Technology
   */
  topiclake_topic_id?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetRegBriefParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetSentimentParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit the document associated with given topiclake_topic_id from TopicLake™
   * Technology
   */
  topiclake_topic_id?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetSummaryParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit the document associated with given topiclake_topic_id from TopicLake™
   * Technology
   */
  topiclake_topic_id?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export interface V1GetTopiclakeTopicsParams {
  /**
   * Limit the documents associated with given ID from TopicLake™ Technology
   */
  id?: string | null;

  /**
   * Limit to documents associated with particular agencies
   */
  agency_id?: Array<number>;

  /**
   * Limits the document associated with given document_id provided by TopicLake™
   * Technology
   */
  document_id?: string | null;

  /**
   * Federal Register document number
   */
  document_number?: Array<string>;

  /**
   * The page of the result set
   */
  page_number?: number;

  /**
   * How many documents to return at once
   */
  page_size?: number;

  /**
   * Find documents published on or before a given date (YYYY-MM-DD)
   */
  publication_end_date?: string | null;

  /**
   * Find documents published on or after a given date (YYYY-MM-DD)
   */
  publication_start_date?: string | null;

  /**
   * Limit to documents associated with particular topics
   */
  topics?: Array<string>;
}

export declare namespace V1 {
  export {
    type V1GetAgencyResponse as V1GetAgencyResponse,
    type V1GetClassificationResponse as V1GetClassificationResponse,
    type V1GetDocumentsResponse as V1GetDocumentsResponse,
    type V1GetEntityResponse as V1GetEntityResponse,
    type V1GetFrDesignatedTopicsResponse as V1GetFrDesignatedTopicsResponse,
    type V1GetKeywordResponse as V1GetKeywordResponse,
    type V1GetQnaResponse as V1GetQnaResponse,
    type V1GetRegBriefResponse as V1GetRegBriefResponse,
    type V1GetSentimentResponse as V1GetSentimentResponse,
    type V1GetSummaryResponse as V1GetSummaryResponse,
    type V1GetTopiclakeTopicsResponse as V1GetTopiclakeTopicsResponse,
    type V1GetAgencyParams as V1GetAgencyParams,
    type V1GetClassificationParams as V1GetClassificationParams,
    type V1GetDocumentsParams as V1GetDocumentsParams,
    type V1GetEntityParams as V1GetEntityParams,
    type V1GetKeywordParams as V1GetKeywordParams,
    type V1GetQnaParams as V1GetQnaParams,
    type V1GetRegBriefParams as V1GetRegBriefParams,
    type V1GetSentimentParams as V1GetSentimentParams,
    type V1GetSummaryParams as V1GetSummaryParams,
    type V1GetTopiclakeTopicsParams as V1GetTopiclakeTopicsParams,
  };
}
